#!/bin/sh
# Will Dolan, June 2016


set -e    # halt on first error

link=all  # link all binaries by default
linked=no # track whether we linked

case $1 in  
  -nolink) link=none ; shift ;;  # don't link
  -link)   link="$2" ; shift ; shift ;;  # link only one binary
esac

# compile and link against course software and netpbm library
CFLAGS="-I."
LIBS="-lcurl -lbcm2835"

# these flags max out warnings and debug info
FLAGS="-g -O0 -Wall -Wextra"

rm -f *.o  # make sure no object files are left hanging around

case $# in
  0) set *.c ;; # if no args are given, compile all .c files
esac

# compile each argument to a .o file
for cfile 
do
  gcc $LIBS $FLAGS $CFLAGS -c $cfile
done

# link together .o files + libraries to make executable binaries
# using one case statement per executable binary

gcc $FLAGS $LIBS -o rfid_pi rfid.o curl_req.o rc522.o
   
linked=yes
